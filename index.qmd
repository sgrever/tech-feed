---
title: "TechFeed"
format: 
  dashboard:
    scrolling: true 
    theme: 
      - styles.scss
    orientation: columns
echo: false
---

```{r packages}
#| output: false
library(dplyr)
library(glue)
library(lubridate)
library(tidyr)
library(janitor)
library(httr2)
library(jsonlite)
library(reactable)
library(htmltools)
library(stringr)
```

```{r colors}
#| output: false

blue <- '#4368B6'
green <- '#78A153' 
yellow <- '#DEC23B' 
orange <- '#E4930A' 
red <- '#C53211' 
gray <- '#64605f'
black <- '#242424'
tan <- '#fffdf5'


######## ! IMPORTANT ! #################
#  COMMENT OUT LATER
########################################

articles_table <- readRDS("data/articles_table.RDS")


```

```{r build-query}
#| output: false
#| eval: true

# Establish parameters and build API string
# Category options: https://newsapi.org/docs/endpoints/top-headlines
category <- "technology" 
key <- Sys.getenv('NEWS_API_KEY')
end_date <- today() - ((wday(today()) %% 7)) # latest Saturday
start_date <- end_date - 6 # preceding Sunday

base_url <- glue(
  "https://newsapi.org/v2/top-headlines?country=us&category={category}&from={start_date}&to={end_date}&sortBy=popularity&apiKey={key}"
)
```


```{r perform-req}
#| output: false
#| eval: false

######## ! IMPORTANT ! #################
#  TURN ON EVAL: TRUE LATER
########################################

# Perform request and save json results
news_raw <- base_url |> 
  request() |> 
  req_perform() |> 
  resp_body_json()
```

```{r json-to-table}
#| output: false
#| eval: false


######## ! IMPORTANT ! #################
#  TURN ON EVAL: TRUE LATER
########################################

# Convert json list to table
extract_elements <- function(x) {
  data.frame(
    source = ifelse(is.null(x$source$name), "", x$source$name),
    author = ifelse(is.null(x$author), "", x$author),
    title = ifelse(is.null(x$title), "", x$title),
    description = ifelse(is.null(x$description), "", x$description),
    content = ifelse(is.null(x$content), "", x$content),
    url = ifelse(is.null(x$url), "", x$url),
    url_image = ifelse(is.null(x$urlToImage), "", x$urlToImage),
    date = ifelse(is.null(x$publishedAt), "", x$publishedAt)
  )
}

articles_list <- purrr::map(
  .x = news_raw$articles,
  .f = ~ extract_elements(.x)
)

articles_table <- bind_rows(articles_list)
```


```{r custom-preview}
#| output: false

articles_prep <- articles_table |> 
  mutate(display_preview = 
           case_when(
             description == "" & content == "" ~ "No preview",
             description == "" ~ content,
             content == "" ~ description, 
             T ~ description
           ))

```


```{r convert-img}
#| output: false

render_image <- function(url) {
    as.character(tags$img(src = url, height = '100px'))
  }

articles_image <- articles_prep |>
  rowwise() |> 
  mutate(url_image_display = render_image(url_image))
```

```{r read-more-link}
#| output: false

articles_image <- articles_image |> 
  mutate(read_more = sprintf(
    paste0('<a href="', 
           URLdecode(url),
           '" target="_blank">', 
           'Read more',
           '</a>')
  ))

with_tooltip <- function(value, tooltip) {
  tags$abbr(
    style = "cursor: help",
    title = tooltip, 
    value)
}
```



# New {scrolling="true"}


## Col 1 

### Row {height = '20%'}


```{r format-start-date}
#| output: false

date_string <- paste0(month(start_date, label = T, abbr = F), " ",
       day(start_date), ", ",
       year(start_date))
```


<h3>This Week in Tech: `r date_string`</h3>  

<h5><i>Most popular technology articles from <a href="https://newsapi.org/" target = "_blank">NewsAPI</a>. Updated every Sunday.</i></h5>


### Row {height = '70%'}

```{r rctable-prep}
articles_short <- articles_image |> 
  # Replace "Read more" text with icon
  mutate(read_more = str_replace(read_more,
                                 'Read more',
                                 '&#x1F517;')) |>
  # Sneak in some inline styling because CSS isn't working...
  mutate(read_more = str_replace(
    read_more,
    ' target=',
    ' style="text-decoration:none" target ='
  )) |> 
  select(
    `Image` = url_image, # plain text link
    `Title` = title,
    `Preview` = display_preview,
    `Link` = read_more,
    url
  ) 

articles_short$Rank <- seq(1:nrow(articles_short))
```


```{r reactable-make}
articles_short |> 
 select(Rank, everything()) |> 
 reactable(
    columns = list(
      
    Rank = colDef(maxWidth = 75, 
                  vAlign = "center",
                  header = with_tooltip(
                    "Rank", "Popularity ranking according to NewsAPI"
                    )
                  ),
    
    Image = colDef(
      maxWidth = 300,
      align = "center",
      vAlign = "center",
      cell = function(value) {
        tags$img(src = value, height = "100px")
      },
      header = with_tooltip(
        "Image", "Publication image, if available"
        )
    ),
    
    # Transform title to include Preview underneath it  
    Title = colDef(
      name = "Title / Preview",
      vAlign = "center",
      cell = function(value, index) {
        Preview <- articles_short$Preview[index]
        div(
          div(style = list(fontWeight = 600, fontSize = "24px"), value),
          div(style = list(fontSize = "16px"), Preview)
        )
      },
      header = with_tooltip(
        "Title", "Article title and description"
        )
    ),
    
    Link = colDef(html = T, maxWidth = 75, vAlign = "center",
                  header = with_tooltip(
                    "Link", "Link to full article in new window"
                    )
                  ),
    
    Preview = colDef(show = F),
    url = colDef(show = F),
    Image = colDef(show = F, vAlign = "center")
  ),
  highlight = T,
  pagination = FALSE,
  striped = T,
  outlined = F,
  theme = reactableTheme(
    stripedColor = tan,
    backgroundColor = '#F5F2E7',
    highlightColor = '#e3e1dc'
  )
 )


```


### Row 3 {height='10%'}

```{r clean-dates}
#| output: false

drop_leading_zeros <- function(date) {
  slash_format <- format(date, "%m/%d/%y")
  slash_no_zeros <- str_remove(slash_format, "^0") |> 
  str_remove("(?<=/)0")
  
  slash_no_zeros
}
```


<h5>Articles from `r drop_leading_zeros(start_date)` - `r drop_leading_zeros(end_date)`</h5>


